<!doctype html>
<html lang="{{ metadata.language }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title or metadata.title }}</title>
    <meta name="description" content="{{ description or metadata.description }}">
    <link rel="icon" href="/logos/JessicaAkermanSquare.svg" type="image/svg+xml">
    <meta name="theme-color" content="#ffffff">
    <meta name="format-detection" content="telephone=no">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    
    {#— Add the contents of CSS files to the bundle —#}
    <style>{% include "css/index.css" %}</style>
    {#— Render the CSS bundle using inlined CSS —#}
    <style>{% getBundle "css" %}</style>
    
    <!-- Inline the navigation JavaScript as a fallback method -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('DOM loaded - inline navigation script running');
      
      // Handle mobile menu toggle
      const mobileNavToggle = document.querySelector('.mobile-nav-toggle');
      const nav = document.querySelector('.nav');
      
      if (mobileNavToggle && nav) {
        console.log('Menu elements found');
        
        mobileNavToggle.addEventListener('click', function(e) {
          e.preventDefault();
          console.log('Toggle clicked');
          
          // Toggle the show class on the navigation
          nav.classList.toggle('show');
          
          // Update the aria-expanded attribute for accessibility
          const expanded = nav.classList.contains('show');
          mobileNavToggle.setAttribute('aria-expanded', expanded);
          
          console.log('Menu toggle clicked, nav show state:', expanded);
        });
      } else {
        console.log('Menu elements not found', { mobileNavToggle, nav });
      }
      
      // Mobile dropdown toggle
      const dropdownItems = document.querySelectorAll('.has-dropdown');
      console.log('Found dropdown items:', dropdownItems.length);
      
      dropdownItems.forEach(item => {
        const link = item.querySelector('a');
        
        if (link) {
          link.addEventListener('click', function(e) {
            if (window.innerWidth <= 768) {
              // Only for mobile view
              e.preventDefault();
              
              // Find the dropdown menu
              const dropdown = item.querySelector('.dropdown-menu');
              console.log('Dropdown item clicked', dropdown);
              
              if (dropdown) {
                // Close all other dropdowns first
                document.querySelectorAll('.has-dropdown .dropdown-menu').forEach(menu => {
                  if (menu !== dropdown) {
                    menu.style.display = 'none';
                  }
                });
                
                // Toggle this dropdown
                dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
                
                // Toggle active class
                item.classList.toggle('dropdown-active');
              }
            }
          });
        }
      });
      
      // Handle clicks outside the navigation
      document.addEventListener('click', function(e) {
        if (window.innerWidth <= 768) {
          // If clicking outside nav and not on the toggle button
          if (!e.target.closest('.nav') && !e.target.closest('.mobile-nav-toggle')) {
            // Hide all dropdown menus
            document.querySelectorAll('.dropdown-menu').forEach(menu => {
              menu.style.display = 'none';
            });
            
            // Remove active class from all items
            document.querySelectorAll('.dropdown-active').forEach(item => {
              item.classList.remove('dropdown-active');
            });
          }
        }
      });
      
      // Reset styles on resize
      window.addEventListener('resize', function() {
        if (window.innerWidth > 768) {
          // Reset all dropdown menus
          document.querySelectorAll('.dropdown-menu').forEach(menu => {
            menu.style.display = '';
          });
          
          // Reset active classes
          document.querySelectorAll('.dropdown-active').forEach(item => {
            item.classList.remove('dropdown-active');
          });
        }
      });
    });
    </script>
  </head>

  <body>
    <a href="#skip" class="visually-hidden">Skip to main content</a>
    <header>
      <a href="/" class="logo">
        <img src="/logos/JessicaAkermanRectangle.svg" alt="{{ metadata.title }}" width="800" height="133">
      </a>
      <button class="mobile-nav-toggle" aria-expanded="false" aria-controls="nav">
        <span class="visually-hidden">Menu</span>
        ☰
      </button>
      <nav>
        <h2 class="visually-hidden">Navigation menu</h2>
        <ul class="nav" id="nav">
          {%- for item in collections.all | eleventyNavigation -%}
            <li class="nav-item{% if item.children and item.children.length %} has-dropdown{% endif %}">
              <a href="{{ item.url }}" {% if page.url==item.url %}aria-current="page"{% endif %}>
                {{ item.title }}
              </a>

              {%- if item.children and item.children.length -%}
                <ul class="dropdown-menu">
                  {%- for child in item.children -%}
                    <li class="dropdown-item">
                      <a href="{{ child.url }}"
                        {% if page.url==child.url %}aria-current="page"{% endif %}>
                        {{ child.title }}
                      </a>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      </nav>
    </header>

    <main id="skip">
      {{ content | safe }}
    </main>

    <footer>
      <div class="footer-content">
        <img src="/logos/JessicaAkermanSquare.svg"
        alt="Jessica Akerman logo"
        width="60" height="60"
        class="footer-logo icon">
        <p>&copy; {{ "now" | date("yyyy") }} {{ metadata.author.name }} | All rights reserved</p>
      </div>
    </footer>

    <script type="module" src="{% getBundleFileUrl "js" %}"></script>
    
    <!-- Try different paths for the navigation script -->
    <script>
      function loadScript(src) {
        return new Promise((resolve, reject) => {
          const script = document.createElement('script');
          script.src = src;
          script.onload = () => resolve();
          script.onerror = () => {
            console.warn(`Failed to load script from: ${src}`);
            reject();
          };
          document.head.appendChild(script);
        });
      }
      
      // Try loading from various possible paths
      loadScript('/js/navigation.js')
        .catch(() => loadScript('./js/navigation.js'))
        .catch(() => loadScript('../js/navigation.js'))
        .catch(() => loadScript('/src/js/navigation.js'))
        .catch(() => console.log('All script loading attempts failed. Using inline fallback.'));
    </script>
  </body>
</html>